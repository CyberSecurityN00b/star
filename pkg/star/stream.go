package star

type Stream struct {
	ID   StreamID
	Type StreamType
}

var ActiveStreams map[StreamID]Stream

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

func NewStream(t StreamType) (stream Stream) {
	NewUID([]byte(stream.ID[:]))
	stream.Type = t
	return
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

type StreamID [16]byte

// Is the StreamID an empty StreamID?
func (id StreamID) IsEmptyStreamID() bool {
	var tmp StreamID
	return tmp == id
}

func (id StreamID) String() string {
	return SqrtedString(id[:], "~")
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

type StreamType byte

const (
	StreamTypeCommand StreamType = iota + 1
	StreamTypeFileUpload
	StreamTypeFileDownload
	StreamTypeShell
	StreamTypeAgentDownload
)

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

func (msg Message) HandleStream() {
}
